<?php

/**
 * Implements hook_schema().
 */
function basic_entity_plus_schema() {
  $schema = array();

  // This table will hold basic_entity_plus entities.
  $schema['basic_entity_plus'] = array(
    'description' => 'The base table for basic_entities.',
    'fields' => array(
      'basic_entity_plus_id' => array(
        'description' => 'The primary identifier for the basic_entity_plus.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this basic_entity_plus.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of the basic_entity_plus.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A description of the basic_entity_plus.',
        'type' => 'text',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the basic_entity_plus was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the basic_entity_plus was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('basic_entity_plus_id'),
  );

  // This table will hold bundle definitions for basic_entity_plus entities.
  // An alternative way to do this is to use the module Entity Plus CMI to store
  // these definitions as config files. 
  $schema['basic_entity_plus_type'] = array(
    'description' => 'Stores information about all bundles of basic_entity_plus entities.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique basic_entity_plus type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
      'status' => array( // This is currently not in use.
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function basic_entity_plus_install() {
  user_role_grant_permissions(BACKDROP_AUTHENTICATED_ROLE, array(
    // Grant viewing permision to authenticated users.
    'view basic_entity_plus entities',
  ));
}

/** 
 * Implements hook_uninstall().
 */
function basic_entity_plus_uninstall() {
  // Remove the view showing basic_entity_plus entities
  $config = config('views.view.basic_entity_plus');
  $config->delete();

  // Get all basic_entity_plus bundles
  $query = db_select('basic_entity_plus_type', 'b');
  $query->addField('b', 'type');
  $bundles = $query->execute()->fetchCol(0);
  foreach ($bundles as $bundle) {
    // Instruct field.module to remove fields attached to these bundles 
    field_attach_delete_bundle('basic_entity_plus', $bundle);
  }
  menu_rebuild();
}


/** 
 * Creates the default basic_entity_plus type.
 * 
 * This undocumented hook is invoked by Entity Plus when enabling modules.
 * The syntax is hook_default_ENTITY_TYPE(). The entity type must be a 
 * configuration entity with the 'exportable' key set to TRUE
 * .
 * @see entity_plus_modules_enabled(). 
 */
function basic_entity_plus_default_basic_entity_plus_type() {
  $items = array();
  $serialized = '{
    "type" : "basic_entity_plus_default",
    "label" : "Default entity",
    "description" : "A basic entity type installed by default.",
    "module" : "basic_entity_plus"
  }';
  $items['basic_entity_plus_default'] = entity_get_controller('basic_entity_plus_type')->import($serialized);
  return $items;
 }
 